@prefix rdf:           <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:          <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl:           <http://www.w3.org/2002/07/owl#> .
@prefix xsd:           <http://www.w3.org/2001/XMLSchema#> .

@prefix blauwdruk:     <https://example.memorix-test.nl/resources/recordtypes/> .
@prefix voc:           <https://example.memorix-test.nl/resources/vocabularies/> .
@prefix data:          <https://example.memorix-test.nl/resources/records/> .

@prefix dc:            <http://purl.org/dc/elements/1.1/> .
@prefix sh:            <http://www.w3.org/ns/shacl#> .
@prefix dash:          <http://datashapes.org/dash#> .
@prefix memorix:       <http://memorix.io/ontology#> .

@prefix rico:          <https://www.ica.org/standards/RiC/ontology#> .
@prefix ric-rst:       <https://www.ica.org/standards/RiC/vocabularies/recordSetTypes#> .
@prefix ric-dft:       <https://www.ica.org/standards/RiC/vocabularies/documentaryFormTypes#> .

# ==================================================
blauwdruk:Archief a memorix:Recordtype, sh:NodeShape, owl:Class ;
    sh:targetClass blauwdruk:Archief ;
    owl:equivalentClass rico:RecordSet ;
    rdfs:label "Archief"@nl ;
    rdfs:comment "Standaard Recordtype voor Archiefblok"@nl ;
    dc:identifier "Archief" ; # Waarom niet gebruik gemaakt van de naam zoals hierboven 'blauwdruk:Archief'?
#    sh:closed true ; # Wanneer gebruiken jullie het feit dat het closed moet zijn? Bij het valideren van imports? Het feit dat een gebruiker alleen invoert via het formulier zorgt ervoor dat de data per definitie closed is.
    sh:ignoredProperties ( rdf:type ) ; # Weet (nog) niet waarom dit moet
    dash:defaultViewForRole dash:all ; # Weet (nog) niet waarom dit moet
    sh:property [
        rdfs:label "Archiefblok naam"@nl ;
        sh:path rico:hasOrHadTitle ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:group blauwdruk:Identificatie  ; # group is verplicht
        sh:order 2.0 ;
        memorix:inTitleAt 2.0 ;
        sh:class rico:Title ; # Titles moeten in RiC-O genest. Daardoor komt er ook in het formulier per definitie een tussenstap (in dit geval "waarde"). Toch? Dat zou je eigenlijk niet moeten willen. Oplosbaar door hele paden te interpreteren in sh:path?
        sh:nodeKind sh:BlankNode ;
    ] ;
    sh:property [
        rdfs:label "Archiefblok nummer"@nl ;
        sh:path rico:hasOrHadIdentifier ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:group blauwdruk:Identificatie  ;
        sh:order 1.0 ;
        memorix:inTitleAt 1.0 ;
        sh:class rico:Identifier ;
        sh:nodeKind sh:BlankNode ;
    ] ;
    sh:property [
        rdfs:label "Archiefvormer"@nl ;
        sh:path rico:hasAccumulator ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:group blauwdruk:Archiefvorming ;
        sh:order 3.0 ;
        dash:editor memorix:LinkedRecordEditor ;
        sh:nodeKind sh:IRI ;
        sh:or ( # deze opsomming roept de juiste recordtypes aan waaruit gekozen mag worden in het formulier met de LinkedRecordEditor. Maar bij het valideren MOET er nu ook in de te valideren graaf/record gedeclareerd zijn dat het een blauwdruk:Persoon moet zijn. Dat zal meestal niet geval zijn.
            [ sh:class blauwdruk:Persoon ]
            # TBD toevoegen CorporateBody
        ) ;       
    ] ;
    sh:property [
        rdfs:label "Periode van vorming"@nl ;
        sh:path rico:isAssociatedWithDate ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:group blauwdruk:Archiefvorming  ;
        sh:order 4.0 ;
        sh:class rico:DateRange ;
        sh:nodeKind sh:BlankNode ;
    ] ;
    sh:property [
        rdfs:label "Inleiding"@nl ;
        sh:path rico:scopeAndContent ;
        sh:group blauwdruk:Beschrijving  ;
        sh:order 5.0 ;
        sh:datatype xsd:string ; # ik zou eigenlijk ook rdf:XMLLiteral willen kunnen toestaan. Dan kunnen er html-tags of ouderwetse ead-tags worden gebruikt.
        dash:editor dash:TextAreaEditor ;
    ] ;
    sh:property [
        rdfs:label "Inventarisatie"@nl ; # Het vanwege RiC-O verplicht nesten leidt er hier toe dat ik twee keer het woord Inventarisatie krijg op mijn scherm. Een keer vanwege rdfs:label (verplicht) en een keer vanwege sh:group (ook verplicht, maar rdfs:label daar misschien niet?)
        sh:minCount 1 ; # Omdat maxCount ontbreekt wordt dit veld herhaalbaar
        sh:path rico:isOrWasDescribedBy ;
        sh:order 7.0 ;
        sh:group blauwdruk:Inventarisatie  ;
        dash:viewer dash:DetailsEditor ;
        sh:nodeKind sh:BlankNode ;
        sh:class blauwdruk:Inventaris ; 
    ] .


blauwdruk:Inventaris a sh:NodeShape, owl:Class ;
    sh:targetClass        blauwdruk:Inventaris ;
    rdfs:equivalentClass  rico:Record ;
    sh:property [ # Deze vaste waarde wordt nu door het formulier niet gegenereerd. Dat lijkt me op te lossen door uit te gaan van 'hasValue': dit veld dan niet renderen en wel de triple in de record toevoegen.
        sh:message        "Inventaris MUST link to ric-dft:FindingAid with rico:hasDocumentaryFormType"@en ;
        sh:message        "Inventaris MOET linken naar ric-dft:FindingAid met rico:hasDocumentaryFormType"@nl ;
        rdfs:comment      "Deze informatie is altijd hetzelfde en wordt daarom niet door beschrijvers in Memorix ingevoerd, maar moet standaard bij een export worden toegevoegd."@nl ;
        rdfs:label        "(Niet in te vullen, want standaard-URI voor 'FindingAid')"@nl ;
        sh:path           rico:hasDocumentaryFormType ;
        sh:order          1.0 ;
        sh:hasValue       ric-dft:FindingAid ;
#        sh:minCount       1 ;
        sh:maxCount       1 ;
    ];
    sh:property [
        sh:message        "Inventaris CAN link to at most 1 rico:Person or rico:CorporateBody with rico:hasAuthor"@en ;
        sh:message        "Inventaris KAN linken aan maximaal 1 rico:Person or rico:CorporateBody met rico:hasAuthor"@nl ;
        rdfs:label        "Inventarisator"@nl ;
        sh:path           rico:hasAuthor ;
        sh:order          2.0 ;
        dash:editor       memorix:LinkedRecordEditor ;
        sh:nodeKind       sh:IRI ; 
        sh:or (
            [ sh:class blauwdruk:Persoon ]
            # TBD toevoegen CorporateBody
        ) ;     
        sh:maxCount       1 ;
    ] ;
    sh:property [
        # LET OP! Deze moet nog een keer netjes met echte rico:Date's Dat is nog niet goed in RiC-O: ik heb er een issue voor aangemaakt bij de RiC-O ontwikkelaars.
        sh:message        "Inventaris CAN link to at most 1 xsd:gYear with rico:publicationDate"@en ;
        sh:message        "Inventaris KAN linken naar maximaal 1 xsd:gYear met rico:publicationDate"@nl ;
        rdfs:label        "Inventarisatiejaar"@nl ;
        sh:path           rico:publicationDate ;
        sh:order          3.0 ;
        sh:datatype       xsd:gYear ; 
        sh:maxCount       1 ;
    ] ;
    sh:property [
        sh:message        "Inventaris CAN link to 1 xsd:string with rico:history"@en ;
        sh:message        "Inventaris KAN linken naar 1 xsd:string met rico:history"@nl ;
        rdfs:label        "Verantwoording van de inventarisatie"@nl ;
        rdfs:comment      ""@nl ;
        sh:path           rico:history ;
        sh:order          4.0 ;
        sh:datatype       xsd:string ; 
        sh:maxCount       1 ;
    ] ;
    sh:property [
        sh:message        "Inventaris MUST link to at exactly 1 rico:CorporateBody with rico:hasPublisher"@en ;
        sh:message        "Inventaris MOET linken aan precies 1 rico:CorporateBody met rico:hasPublisher"@nl ;
        rdfs:comment      "Deze informatie is altijd hetzelfde (namelijk 'Stadsarchief Amsterdam') en wordt daarom niet door beschrijvers in Memorix ingevoerd, maar moet standaard bij een export worden toegevoegd."@nl ;
        rdfs:label        "(Niet in te vullen, want standaard-URI voor 'SAA')"@nl ;
        sh:path           rico:hasPublisher ;
        sh:order          5.0 ;
        sh:hasValue       data:de-UUID-voor-SAA ;
#        sh:minCount       1 ;
        sh:maxCount       1 ;
    ] .


# ========================================
# PropertyGroup's

blauwdruk:Identificatie a sh:PropertyGroup ;
    rdfs:label "Identificatie"@nl ;
    sh:order    1.0 .

blauwdruk:Beschrijving a sh:PropertyGroup ;
    rdfs:label "Beschrijving"@nl ;
    sh:order    2.0 .

blauwdruk:Archiefvorming a sh:PropertyGroup ;
    rdfs:label "Archiefvorming"@nl ;
    sh:order    3.0 .

blauwdruk:Inventarisatie a sh:PropertyGroup ;
    rdfs:label "Inventarisatie"@nl ;
    sh:order    4.0 .

# ==========================================
# Standard shapes

## Title
rico:Title a sh:NodeShape ;
    sh:targetClass rico:Title ;
    sh:closed true ;
    sh:ignoredProperties     ( rdf:type ) ;
    sh:property [
        sh:message        "This node MUST link to exactly 1 xsd:string with rico:textualValue"@en ;
        sh:path           rico:textualValue ;
        rdfs:label        "Waarde"@nl ;
        sh:order          1.0 ;
        sh:datatype       xsd:string ; 
        sh:minCount       1 ;
        sh:maxCount       1 ;
    ] .

## Identifier
rico:Identifier a sh:NodeShape ;
    sh:targetClass rico:Identifier ;
    # sh:closed true ;
    sh:ignoredProperties     ( rdf:type ) ;
    sh:property [
        sh:message        "This node MUST link to exactly 1 xsd:string with rico:textualValue"@en ;
        sh:path           rico:textualValue ;
        rdfs:label        "Waarde"@nl ;
        sh:order          2.0 ;
        sh:datatype       xsd:string ; 
        sh:minCount       1 ;
        sh:maxCount       1 ;
    ] ;
    sh:property [
        sh:message        "rico:Identifier MUST link to exactly 1 rico:IdentifierType with rico:hasIdentifierType"@en ;
        sh:path           rico:hasIdentifierType ;
        rdfs:label        "Type"@nl ;
        sh:order          1.0 ;
        dash:editor       memorix:VocabularyEditor ; # Eigenlijk moet ik hier standaard dezelfde URI krijgen, want een toegangsnummer is verplicht. Hier deze editor nu gebruikt om te laten zien hoe het zou kunnen werken.
#       sh:class skos:Concept ; # Nu nog niet in staat gebleken om een Concept aan te maken.
#       skos:ConceptSchema voc:conceptschemes/uuid-voor-keuzelijst-identifiertypes ;
        sh:nodeKind       sh:IRI ;
        sh:minCount       1 ;
        sh:maxCount       1 ;
    ] .

## Date
rico:DateRange a sh:NodeShape ;
    sh:targetClass rico:DateRange ;
    sh:closed true ;
    sh:ignoredProperties     ( rdf:type ) ;
    sh:property [
        rdfs:label "Periode (tekst)"@nl ;
        sh:path rico:expressedDate ;
        sh:order 1.0 ;
        sh:datatype xsd:string ;
    ] ;
    sh:property [
        rdfs:label "Begindatum"@nl ;
        sh:path rico:hasBeginningDate ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:order 2.0 ;
        sh:class rico:SingleDate ;
        sh:nodeKind sh:BlankNode ;
        dash:viewer dash:DetailsEditor ;
    ] ;
    sh:property [
        rdfs:label "Einddatum"@nl ;
        sh:path rico:hasEndDate ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:order 3.0 ;
        sh:class rico:SingleDate ;
        sh:nodeKind sh:BlankNode ;
        dash:viewer dash:DetailsEditor ;
    ] .

rico:SingleDate a sh:NodeShape ;
    sh:targetClass rico:SingleDate ;
    sh:closed true ;
    sh:ignoredProperties     ( rdf:type ) ;
    sh:property [
        rdfs:label "Datum (tekst)"@nl ;
        sh:path rico:expressedDate ;
        sh:order 1.0 ;
        sh:datatype xsd:string ;
    ] ;
    sh:property [
        rdfs:label "Datum (genormaliseerd)"@nl ;
        sh:path rico:normalizedDateValue ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:order 2.0 ;
        sh:datatype xsd:gYear ;
    ] .
